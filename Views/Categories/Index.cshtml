@using ttcm_mvc.Helpers
@using ttcm_mvc.Models.DTOs
@model PaginatedList<CategoryDTOResponse>

@{

}

<table class="table">
    <thead>
        <tr>
            <th scope="col">#</th>
            <th scope="col">Name</th>
           
        </tr>
    </thead>
    <tbody>

        @foreach (CategoryDTOResponse c in Model.Items)
        {
            <tr>
                <td scope="row">@c.Id</td>
                <td>@c.Name</td>
               
            </tr>
        }
    </tbody>
</table>
<nav aria-label="...">
    <ul class="pagination">
       @if(Model.HasPrevPage())
        {
            <li class="page-item disabled">
                <a class="page-link" tabindex="-1" aria-disabled="true" asp-action="Index" asp-route-pageIndex="@(Model.PageIndex - 1)">Previous</a>
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <span class="page-link">Previous</span>
            </li>
        }
        @for(int i=1; i<=Model.TotalPages; i++)
        {
            if (i == Model.PageIndex)
            {
                <li class="page-item active">
                    <span class="page-link">@i</span>
                </li>
            }
            else
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-pageIndex="@i">@i</a>
                </li>
            }
        }
        @if (Model.HasNextPage())
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-pageIndex="@(Model.PageIndex + 1)">Next</a>
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <span class="page-link">Next</span>
            </li>
        }
    </ul>
</nav>
